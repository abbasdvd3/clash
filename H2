port: 7892
socks-port: 7891
mixed-port: 7890
redir-port: 7893
tproxy-port: 7894
unified-delay: true
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome
allow-lan: true
mode: rule
log-level: info
ipv6: true
udp: true
external-controller: 127.0.0.1:9090
external-controller-tls: 127.0.0.1:9093
external-ui-name: xd
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"
geox-url:
  geoip: "https://raw.githubusercontent.com/Chocolate4U/Iran-v2ray-rules/release/geoip.dat"
  geosite: "https://raw.githubusercontent.com/Chocolate4U/Iran-v2ray-rules/release/geosite.dat"
  mmdb: "https://raw.githubusercontent.com/Chocolate4U/Iran-clash-rules/release/geoip.metadb"
  asn: "https://raw.githubusercontent.com/Chocolate4U/Iran-v2ray-rules/geolite2/GeoLite2-ASN.mmdb"
profile:
  store-selected: true
  store-fake-ip: true
sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - Mijia Cloud
tun:
  enable: true
  stack: system
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 100.0.0.1/8
  fake-ip-filter:
    - "*"
    - +.lan
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
  nameserver:
    - https://223.5.5.5/dns-query#h3=true
    - https://223.6.6.6/dns-query#h3=true
  proxy-server-nameserver: [https://doh.pub/dns-query, https://dns.alidns.com/dns-query]
NodeParam: &NodeParam {type: http, interval: 3600, health-check: {enable: true, url: 'http://cp.cloudflare.com', interval: 60}}
proxy-providers: 
  H1:
    url: 'https://cdn.jsdelivr.net/gh/itxve/fetch-clash-node/node/NodeShare.yaml'
    <<: *NodeParam
    path: 'proxy_provider/H1.yaml'
  H1u:
    url: 'https://chromego-sub.netlify.app/sub/merged_proxies_new.yaml'
    <<: *NodeParam
    path: 'proxy_provider/H1u.yaml'
  Hq1:
    url: 'https://raw.githubusercontent.com/abbasdvd3/clash/refs/heads/main/vless/x'
    <<: *NodeParam
    path: 'proxy_provider/Hq1.yaml'
  HA1:
    url: 'https://raw.githubusercontent.com/lagzian/SS-Collector/main/SS/trinity_clash.yaml'
    <<: *NodeParam
    path: 'proxy_provider/HA1.yaml'    
  H1u5:
    url: 'https://cdn.jsdelivr.net/gh/itxve/fetch-clash-node/node/NodeFree.yaml'
    <<: *NodeParam
    path: 'proxy_provider/H1u5.yaml'
  Hq15:
    url: 'https://cdn.jsdelivr.net/gh/itxve/fetch-clash-node/node/merge.yaml'
    <<: *NodeParam
    path: 'proxy_provider/Hq15.yaml'
  HA155:
    url: 'https://cdn.jsdelivr.net/gh/itxve/fetch-clash-node/node/ClashNode.yaml'
    <<: *NodeParam
    path: 'proxy_provider/HA155.yaml'

FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUK: &FilterUK '^(?=.*((?i)🇬🇧|英国|伦敦|(\b(UK|United Kingdom)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterFR: &FilterFR '^(?=.*((?i)🇫🇷|法国|(\b(FR|France)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterDE: &FilterDE '^(?=.*((?i)🇩🇪|德国|(\b(DE|Germany)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterGame: &FilterGame '^(?=.*((?i)游戏|🎮|(\b(GAME)\b)))(?!.*((?i)回国|校园)).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'

UrlTest: &UrlTest {type: url-test, interval: 99, tolerance: 20, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all: true}
FallBack: &FallBack {type: fallback, interval: 99, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all: true}
LoadBalance: &LoadBalance {type: load-balance, interval: 99, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all: true}
RuleSet: &RuleSet {type: http, behavior: classical, interval: 3600, format: yaml, proxy: DIRECT}
# https://raw.githubusercontent.com/clash-verge-rev/icon-hub/main/genshin-impact/1.png

proxy-groups: 
  - {name: auto, type: url-test, include-all: true, icon: https://raw.githubusercontent.com/abbasdvd3/allwinner-tools/refs/heads/master/daily_build/0.gif, filter: *FilterGame, proxies: [url-test, select]}
  - {name: url-test, type: url-test, include-all: true, icon: https://raw.githubusercontent.com/clash-verge-rev/icon-hub/main/genshin-impact/2.png, filter: *FilterAll}
  - {name: select, type: select, include-all: true, icon: https://raw.githubusercontent.com/clash-verge-rev/icon-hub/main/genshin-impact/3.png, proxies: []}
  - {name: AI, type: url-test, include-all: true, icon: https://raw.githubusercontent.com/clash-verge-rev/icon-hub/main/genshin-impact/4.png, filter: *FilterAll}
  - {name: TikTok, type: url-test, include-all: true, icon: https://raw.githubusercontent.com/clash-verge-rev/icon-hub/main/genshin-impact/5.png, filter: *FilterAll}
  - {name: Telegram, type: url-test, proxies: [Hong Kong, Taiwan, Japan, Korean, New country, US, UK, French, German]}
  - {name: App Store, type: url-test, proxies: [Hong Kong, Taiwan, Japan, Korean, New country, US, UK, French, German]}
  - {name: Apple ID, type: url-test, proxies: [Hong Kong, Taiwan, Japan, Korean, New country, US, UK, French, German]}
  - {name: TestFlight, type: url-test, proxies: [Hong Kong, Taiwan, Japan, Korean, New country, US, UK, French, German]}
  - {name: 1Password, type: url-test, proxies: [Hong Kong, Taiwan, Japan, Korean, New country, US, UK, French, German]}
  - {name: Microsoft, type: url-test, proxies: [Hong Kong, Taiwan, Japan, Korean, New country, US, UK, French, German]}
  - {name: Netflix, type: url-test, proxies: [Hong Kong, Taiwan, Japan, Korean, New country, US, UK, French, German]}
  - {name: Emby, type: url-test, proxies: [Hong Kong, Taiwan, Japan, Korean, New country, US, UK, French, German]}
  - {name: line, type: select, proxies: [url-test, select, auto, Taiwan, Japan, Korean, New country, US, UK, French, German, Hong Kong]}

  - {name: Hong Kong, type: url-test, proxies: [⏱Hong Kong, 🚥Hong Kong, 🎛Hong Kong]}
  - {name: Taiwan, type: url-test, proxies: [⏱Taiwan, 🚥Taiwan, 🎛Taiwan]}
  - {name: Japan, type: url-test, proxies: [⏱Japan, 🚥Japan, 🎛Japan]}
  - {name: Korean, type: url-test, proxies: [⏱Korean, 🚥Korean, 🎛Korean]}
  - {name: New country, type: url-test, proxies: [⏱New country, 🚥New country, 🎛New country]}
  - {name: US, type: url-test, proxies: [⏱US, 🚥US, 🎛US]}
  - {name: UK, type: url-test, proxies: [⏱UK, 🚥UK, 🎛UK]}
  - {name: French, type: url-test, proxies: [⏱French, 🚥French, 🎛French]}
  - {name: German, type: url-test, proxies: [⏱German, 🚥German, 🎛German]}

  - {name: ⏱Hong Kong, <<: *UrlTest, filter: *FilterHK}
  - {name: ⏱Taiwan, <<: *UrlTest, filter: *FilterTW}
  - {name: ⏱Japan, <<: *UrlTest, filter: *FilterJP}
  - {name: ⏱Korean, <<: *UrlTest, filter: *FilterKR}
  - {name: ⏱New country, <<: *UrlTest, filter: *FilterSG}
  - {name: ⏱US, <<: *UrlTest, filter: *FilterUS}
  - {name: ⏱UK, <<: *UrlTest, filter: *FilterUK}
  - {name: ⏱French, <<: *UrlTest, filter: *FilterFR}
  - {name: ⏱German, <<: *UrlTest, filter: *FilterDE}

  - {name: 🚥Hong Kong, <<: *FallBack, filter: *FilterHK}
  - {name: 🚥Taiwan, <<: *FallBack, filter: *FilterTW}
  - {name: 🚥Japan, <<: *FallBack, filter: *FilterJP}
  - {name: 🚥Korean, <<: *FallBack, filter: *FilterKR}
  - {name: 🚥New country, <<: *FallBack, filter: *FilterSG}
  - {name: 🚥US, <<: *FallBack, filter: *FilterUS}
  - {name: 🚥UK, <<: *FallBack, filter: *FilterUK}
  - {name: 🚥French, <<: *FallBack, filter: *FilterFR}
  - {name: 🚥German, <<: *FallBack, filter: *FilterDE}

  - {name: 🎛Hong Kong, <<: *LoadBalance, filter: *FilterHK}
  - {name: 🎛Taiwan, <<: *LoadBalance, filter: *FilterTW}
  - {name: 🎛Japan, <<: *LoadBalance, filter: *FilterJP}
  - {name: 🎛Korean, <<: *LoadBalance, filter: *FilterKR}
  - {name: 🎛New country, <<: *LoadBalance, filter: *FilterSG}
  - {name: 🎛US, <<: *LoadBalance, filter: *FilterUS}
  - {name: 🎛UK, <<: *LoadBalance, filter: *FilterUK}
  - {name: 🎛French, <<: *LoadBalance, filter: *FilterFR}
  - {name: 🎛German, <<: *LoadBalance, filter: *FilterDE}

rule-providers:
  Proxy:
    <<: *RuleSet
    path: './RuleSet/Proxy.yaml'
    url: 'https://raw.githubusercontent.com/luestr/ProxyResource/main/Tool/Clash/Rule/Proxy.yaml'

  AWAvenue-Ads-Rule:
    <<: *RuleSet
    path: './RuleSet/AWAvenue-Ads-Rule-Clash.yaml'
    url: 'https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Clash.yaml'
rules:
  - RULE-SET, Proxy, auto
  - RULE-SET,AWAvenue-Ads-Rule,REJECT
  - GEOIP, ir, DIRECT,no-resolve
  - MATCH,line
