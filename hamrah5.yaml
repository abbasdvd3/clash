mixed-port: 7890
# 局域网访问控制(白名单/黑名单)
allow-lan: true
lan-allowed-ips: ["0.0.0.0/0", "::/0"]
lan-disallowed-ips: []
# 运行模式
mode: rule
# 日志级别
log-level: info
# 接受IPv6流量
ipv6: true
# 外部控制监听地址、访问密钥
external-controller: 0.0.0.0:9090
secret: ""
# 延迟计算去除握手等额外延迟
unified-delay: true
# TCP并发
tcp-concurrent: true
# 全局客户端指纹(支持VLESS,VMess,Trojan)
global-client-fingerprint: chrome
# 下载外部资源(proxy-provider、rule-provider、GEO等)使用的UA
global-ua: clash.meta

# DNS配置
nameservers: &nameservers
  - https://dns.alidns.com/dns-query # 阿里云公共DNS
  - https://doh.pub/dns-query # 腾讯DNSPod
  - https://doh.360.cn/dns-query # 360安全DNS
fallback_nameservers: &fallback_nameservers
  - https://1.1.1.1/dns-query # Cloudflare(主)
  - https://1.0.0.1/dns-query # Cloudflare(备)
  - https://208.67.222.222/dns-query # OpenDNS(主)
  - https://208.67.220.220/dns-query # OpenDNS(备)
  - https://194.242.2.2/dns-query # Mullvad(主)
  - https://194.242.2.3/dns-query # Mullvad(备)
dns:
  enable: true
  ipv6: true
  use-system-hosts: false
  cache-algorithm: arc
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    [
      "+.lan",
      "+.local",
      "+.msftconnecttest.com",
      "+.msftncsi.com",
      "localhost.ptlogin2.qq.com",
      "localhost.sec.qq.com",
      "localhost.work.weixin.qq.com"
    ]
  default-nameserver: ["223.5.5.5", "114.114.114.114", "1.1.1.1", "8.8.8.8"]
  nameserver: *nameservers
  proxy-server-nameserver: *nameservers
  nameserver-policy:
    "+.mirror.ghproxy.com": *fallback_nameservers
    "geosite:private,cn,geolocation-cn": *nameservers
    "geosite:google,youtube,telegram,gfw,geolocation-!cn": *fallback_nameservers

proxy-groups:
  - name: Auto
    type: url-test
    interval: 1200
    tolerance: 150
    url: http://www.gstatic.com/generate_204
    use: &Use
      - Subscription-1
      - Subscription-2
      - Subscription-3
      - Subscription-4
      - Subscription-5
      - Subscription-6

  - name: Geo-HK
    type: url-test
    interval: 600
    tolerance: 100
    url: http://www.gstatic.com/generate_204
    filter: "HongKong|HK|香港"
    use: *Use

  - name: Geo-TW
    type: url-test
    interval: 600
    tolerance: 100
    url: http://www.gstatic.com/generate_204
    filter: "Taiwan|TW|台湾"
    use: *Use

  - name: Geo-SG
    type: url-test
    interval: 600
    tolerance: 100
    url: http://www.gstatic.com/generate_204
    filter: "Singapore|SG|新加坡"
    use: *Use

  - name: Geo-JP
    type: url-test
    interval: 600
    tolerance: 100
    url: http://www.gstatic.com/generate_204
    filter: "Japan|JP|日本"
    use: *Use

  - name: Geo-US
    type: url-test
    interval: 600
    tolerance: 100
    url: http://www.gstatic.com/generate_204
    filter: "America|United States|US|美国"
    use: *Use

  - name: Geo-UK
    type: url-test
    interval: 600
    tolerance: 100
    url: http://www.gstatic.com/generate_204
    filter: "Britain|England|UK|英国"
    use: *Use

  - name: Geo-DE
    type: url-test
    interval: 600
    tolerance: 100
    url: http://www.gstatic.com/generate_204
    filter: "Germany|Deutsch|DE|德国"
    use: *Use

  - name: Geo-CN
    type: select
    disable-dns: true
    filter: "China|CN|中国"
    use: *Use
    proxies:
      - DIRECT

  - name: Block
    type: select
    use: *Use
    proxies:
      - REJECT
      - DIRECT
      - Geo-HK
      - Geo-TW
      - Geo-SG
      - Geo-JP
      - Geo-US
      - Geo-UK
      - Geo-DE
      - Geo-CN

  - name: Proxy
    type: select
    use: *Use
    proxies:
      - Auto
      - Geo-HK
      - Geo-TW
      - Geo-SG
      - Geo-JP
      - Geo-US
      - Geo-UK
      - Geo-DE
      - Geo-CN
      - DIRECT
      - Block

  - name: DNS-Proxy
    type: select
    use: *Use
    proxies: &Proxy
      - Proxy
      - Auto
      - Geo-HK
      - Geo-TW
      - Geo-SG
      - Geo-JP
      - Geo-US
      - Geo-UK
      - Geo-DE
      - Geo-CN
      - DIRECT
      - Block

  - name: Netflix
    type: select
    use: *Use
    proxies: *Proxy

  - name: Apple
    type: select
    use: *Use
    proxies: *Proxy

  - name: iCloud
    type: select
    use: *Use
    proxies: *Proxy

  - name: MicrosoftCN
    type: select
    use: *Use
    proxies: *Proxy

  - name: PayPal
    type: select
    use: *Use
    proxies: *Proxy

  - name: Steam
    type: select
    use: *Use
    proxies: *Proxy

  - name: Game
    type: select
    use: *Use
    proxies: *Proxy

  - name: Facebook
    type: select
    use: *Use
    proxies: *Proxy

  - name: Twitter
    type: select
    use: *Use
    proxies: *Proxy

  - name: Telegram
    type: select
    use: *Use
    proxies: *Proxy

  - name: GlobalTV
    type: select
    use: *Use
    proxies: *Proxy

  - name: YouTube
    type: select
    use: *Use
    proxies: *Proxy

  - name: Spotify
    type: select
    use: *Use
    proxies: *Proxy

  - name: SpeedTest
    type: select
    use: *Use
    proxies: *Proxy

  - name: Download
    type: select
    use: *Use
    proxies: *Proxy

  - name: CN
    type: select
    disable-dns: true
    use: *Use
    proxies: *Proxy

  - name: Mismatch
    type: select
    use: *Use
    proxies: *Proxy

proxy-providers:
  Subscription-1:
    type: http
    url: "https://raw.githubusercontent.com/abbasdvd3/clash/main/hamrah.yaml" # replace this URL with your provider's subscription link
    path: ./providers/Subscription-1.yaml
    interval: 6
#    prefix-name: "S-"
#    url-proxy: true
#    udp: true
    header:
      User-Agent:
        - "Clash/v1.11.8"
    health-check:
      enable: false
      interval: 0
      url: http://www.gstatic.com/generate_204
#      lazy: false # default value is true

  Subscription-2:
    type: http
    url: "https://v2rayclashnode.github.io/uploads/2024/06/0-20240616.yaml" # replace this URL with your provider's subscription link
    path: ./providers/Subscription-2.yaml
    interval: 6
#    prefix-name: "S-"
#    url-proxy: true
#    udp: true
    header:
      User-Agent:
        - "Clash/v1.11.8"
    health-check:
      enable: false
      interval: 0
      url: http://www.gstatic.com/generate_204
#      lazy: false # default value is true

  Subscription-3:
    type: http
    url: "https://v2rayclashnode.github.io/uploads/2024/06/1-20240616.yaml" # replace this URL with your provider's subscription link
    path: ./providers/Subscription-3.yaml
    interval: 6
#    prefix-name: "S-"
#    url-proxy: true
#    udp: true
    header:
      User-Agent:
        - "Clash/v1.11.8"
    health-check:
      enable: false
      interval: 0
      url: http://www.gstatic.com/generate_204
#      lazy: false # default value is true

  Subscription-4:
    type: http
    url: "https://v2rayclashnode.github.io/uploads/2024/06/2-20240616.yaml" # replace this URL with your provider's subscription link
    path: ./providers/Subscription-4.yaml
    interval: 6
#    prefix-name: "S-"
#    url-proxy: true
#    udp: true
    header:
      User-Agent:
        - "Clash/v1.11.8"
    health-check:
      enable: false
      interval: 0
      url: http://www.gstatic.com/generate_204
#      lazy: false # default value is true

  Subscription-5:
    type: http
    url: "https://v2rayclashnode.github.io/uploads/2024/06/3-20240616.yaml" # replace this URL with your provider's subscription link
    path: ./providers/Subscription-5.yaml
    interval: 6
#    prefix-name: "S-"
#    url-proxy: true
#    udp: true
    header:
      User-Agent:
        - "Clash/v1.11.8"
    health-check:
      enable: false
      interval: 0
      url: http://www.gstatic.com/generate_204
#      lazy: false # default value is true

  Subscription-6:
    type: http
    url: "https://v2rayclashnode.github.io/uploads/2024/06/4-20240616.yml" # replace this URL with your provider's subscription link
    path: ./providers/Subscription-6.yaml
    interval: 6
#    prefix-name: "S-"
#    url-proxy: true
#    udp: true
    header:
      User-Agent:
        - "Clash/v1.11.8"
    health-check:
      enable: false
      interval: 0
      url: http://www.gstatic.com/generate_204
#      lazy: false # default value is true


script:
#  path: ./script.star
  code: |
    blockHosts = ['analytics', 'adservice', 'firebase', 'bugly', 'safebrowsing', 'doubleclick']
    directHosts = ['push.apple.com', 'iosapps.itunes.apple.com', 'jetbrains.com', 'msftconnecttest.com']

    def main(ctx, metadata):
      network = metadata["network"]
      dst_port = int(metadata["dst_port"])
      if network == 'udp' and dst_port == 443:
        return "REJECT"

      if network == "udp" and (dst_port == 123 or (dst_port >= 136 and dst_port <=139)):
        return "DIRECT"

      host = metadata["host"]
      for kw in blockHosts:
        if kw in host:
          return "REJECT"

      if ctx.rule_providers['category-ads-all'].match(metadata):
        return "Block"

      for kw in directHosts:
        if kw in host:
          return "DIRECT"

      if ctx.rule_providers['icloud'].match(metadata):
        return "iCloud"

      if ctx.rule_providers['apple'].match(metadata):
        return "Apple"

      if ctx.rule_providers['microsoft@cn'].match(metadata):
        return "MicrosoftCN"

      if ctx.rule_providers['paypal@cn'].match(metadata):
        return "CN"

      if ctx.rule_providers['paypal'].match(metadata):
        return "PayPal"

      if ctx.rule_providers['twitter'].match(metadata):
        return "Twitter"

      if ctx.rule_providers['facebook'].match(metadata):
        return "Facebook"

      if ctx.rule_providers['youtube'].match(metadata):
        return "YouTube"

      if ctx.rule_providers['geolocation-!cn'].match(metadata):
        return "Proxy"

      if ctx.rule_providers['geolocation-cn'].match(metadata):
        return "CN"

      code = ""
      ip = metadata["dst_ip"]
      if ip != "":
        code = ctx.geoip(ip)
        if code == "PRIVATE" or code == "LAN":
          return "DIRECT"
        if code == "TELEGRAM":
          return "Telegram"
      else:
        ip = ctx.resolve_ip(host)

      if ip == "":
        return "Mismatch"

      code = ctx.geoip(ip) if code == "" else code
      if code == "CN":
        return "CN"

      return "Mismatch" # default policy for requests which are not matched by any other script

  engine: expr # or starlark (10x to 20x slower)
  shortcuts:
    QUIC: |
      network == "udp" and dst_port == 443
    Privacy: |
      any(["analytics", "adservice", "firebase", "safebrowsing", "doubleclick", "bugly", "bugsnag"], host contains #)
    BilibiliUdp: |
      network == "udp" and match_provider("bilibili")
    DirectUdp: |
      network == "udp" and (dst_port == 123 or (dst_port >= 136 and dst_port <=139))

rules:
  - GEOIP,private,DIRECT,no-resolve
  - GEOIP,telegram,Telegram,no-resolve

#  - SCRIPT,QUIC,REJECT # Disable QUIC
#  - SCRIPT,Privacy,REJECT
#  - SCRIPT,BilibiliUdp,REJECT
#  - SCRIPT,DirectUdp,DIRECT

  - DOMAIN-SUFFIX,push.apple.com,DIRECT

  - GEOSITE,category-ads-all,Block

  - DOMAIN-SUFFIX,jetbrains.com,DIRECT
  - DOMAIN-SUFFIX,msftconnecttest.com,DIRECT
  - DOMAIN,iosapps.itunes.apple.com,DIRECT

  - GEOIP,icloud,iCloud
  - GEOIP,apple,Apple
  - GEOIP,microsoft,MicrosoftCN
  - GEOIP,paypal@cn,CN
  - GEOIP,paypal,PayPal
  - GEOIP,twitter,Twitter
  - GEOIP,facebook,Facebook
  - GEOIP,youtube,YouTube



  - GEOIP,cn,CN

  - MATCH,Mismatch
